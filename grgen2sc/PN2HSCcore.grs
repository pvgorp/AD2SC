# This file is part of AD2SC.
#  
# AD2SC: Activity Diagram to Statechart Translator
# Copyright (C) 2010,2011 Pieter Van Gorp (pieter(at)pietervangorp.com)
# Copyright (C) 2010,2011 Rik Eshuis
# 
# AD2SC is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# AD2SC is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with AD2SC; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

echo "|---> Mapping PN elements to SC elements..."

xgrs [trans_place]&&[trans_transition] &&[trans_post]&&[trans_pre]&& [trans_token] 

# BEGIN NEW
echo "|---> Generating composite traceability links..."
xgrs [merge_tracelinks_AD_AD_PN_SC]
# END NEW
echo "|---> Introducing hierarchy (PN-destructive reduction rules)..."
xgrs (transform_singleton_pre_post$||trans_AND_split$||trans_AND_join)* 

xgrs R2extra # NEW PVG for cross-sync

# BEGIN AD specific
# should become "xgrs  ((transform_singleton_pre_post$||trans_AND_split$||trans_AND_join)*  || R3)*" but does not terminate yet
xgrs $%[%R3]
xgrs  (transform_singleton_pre_post$||trans_AND_split$||trans_AND_join)* 

xgrs R2extra # NEW PVG for cross-sync

xgrs $%[%R3]
xgrs  (transform_singleton_pre_post$||trans_AND_split$||trans_AND_join)* 

xgrs R2extra # NEW PVG for cross-sync

xgrs $%[%R3]
xgrs  (transform_singleton_pre_post$||trans_AND_split$||trans_AND_join)* 
# END AD specific

silence on
echo "|---> Checking Metamodel Conformance"
validate

echo "|---> Adding some UML HSC syntactical sugar"
xgrs [makeEndStateExplicit] | makeMergeNodesExplicit* | makeDecisionNodesExplicit*  

echo "|---> Serializing the output model to UML2 XMI"
redirect emit "uml/out.uml"
xgrs {(::visID2) = valloc()} && hscModel2eclipseUMLtext && {vfree(::visID2)}

# echo removing fork/join elements (redirecting arcs)
xgrs (replace_HEfork_arc $| replace_HEjoin_arc)*
# PVG: above line might have to disabled if hyper-edges should be removed completely within R2

echo "|---> some more syntactical sugar related change that has been designed with yComp in mind, and not with the transformation to UML 2 XMI..."
# PVG: can be disabled for debugging cross-sync: 
xgrs [removeTrivialHyperEdge] | [flattenSingletonORregion] | [makeEndStateExplicit]

echo "|---> Serializing the output model to UML SC XMI for the Eugenia based GMF editor"
redirect emit "uml/eugenia-sc-pngeneric.statechart" # is XMI2
xgrs {(::visID2) = valloc()} && hscModel2eugeniaXMItext && {vfree(::visID2)}

#xgrs cleanResultIfAllTransformed # almost empty if successful reduction
